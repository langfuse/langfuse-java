/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.langfuse.client.resources.ingestion.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.langfuse.client.core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = SdkLogBody.Builder.class
)
public final class SdkLogBody {
  private final Object log;

  private final Map<String, Object> additionalProperties;

  private SdkLogBody(Object log, Map<String, Object> additionalProperties) {
    this.log = log;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("log")
  public Object getLog() {
    return log;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof SdkLogBody && equalTo((SdkLogBody) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(SdkLogBody other) {
    return log.equals(other.log);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.log);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static LogStage builder() {
    return new Builder();
  }

  public interface LogStage {
    _FinalStage log(Object log);

    Builder from(SdkLogBody other);
  }

  public interface _FinalStage {
    SdkLogBody build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements LogStage, _FinalStage {
    private Object log;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(SdkLogBody other) {
      log(other.getLog());
      return this;
    }

    @java.lang.Override
    @JsonSetter("log")
    public _FinalStage log(Object log) {
      this.log = log;
      return this;
    }

    @java.lang.Override
    public SdkLogBody build() {
      return new SdkLogBody(log, additionalProperties);
    }
  }
}
